{"version":3,"sources":["components/Image.js","utils/hooks/useFetchImage.js","components/Loading.js","components/Images.js","utils/hooks/useDebounce.js","page/Gallery.js","App.js","reportWebVitals.js","index.js"],"names":["Image","index","image","handleRemove","useState","isHovering","setIsHovering","className","onMouseEnter","onMouseLeave","onClick","src","width","height","useFetchImage","page","searchTerm","images","setImages","errors","setErrors","isLoading","setIsLoading","fetchSearch","res","data","results","fetchRandom","useEffect","url","axios","get","process","then","catch","e","fetch","Loading","Images","setPage","setSearchTerm","slice","length","ShowImage","dataLength","next","hasMore","map","img","urls","regular","debounce","typingTimeout","setTypingTimeout","func","wait","clearTimeout","timeout","setTimeout","useDebounce","type","onChange","text","target","value","placeholder","Gallery","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ebd5528.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Image({ index, image, handleRemove }) {\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  return (\r\n    <div className=\"w-1/3 p-1 border flex justify-center\">\r\n      <div\r\n        className=\"relative\"\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n      >\r\n        <i\r\n          className={`fas fa-times fa-2x absolute pr-1 right-0 cursor-pointer opacity-25 hover:opacity-100 ${\r\n            isHovering ? '' : 'hidden'\r\n          }`}\r\n          onClick={() => handleRemove(index)}\r\n        ></i>\r\n        <img src={image} width=\"100%\" height=\"auto\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst KEY = process.env.REACT_APP_UNSPLASH_KEY;\r\nconst API = process.env.REACT_APP_UNSPLASH_API;\r\n\r\nexport default function useFetchImage(page, searchTerm) {\r\n  const [images, setImages] = useState([]);\r\n  const [errors, setErrors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetch = () => {\r\n    const url =\r\n      searchTerm === null ? 'photos?' : `search/photos?query=${searchTerm}&`;\r\n\r\n    axios\r\n      .get(`${API}/${url}client_id=${KEY}&page=${page}`)\r\n      .then((res) => {\r\n        searchTerm === null ? fetchRandom(res) : fetchSearch(res);\r\n\r\n        setIsLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setErrors(['Unable to fetch images']);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const fetchSearch = (res) => {\r\n    page > 1\r\n      ? setImages([...images, ...res.data.results])\r\n      : setImages([...res.data.results]);\r\n  };\r\n\r\n  const fetchRandom = (res) => {\r\n    setImages([...images, ...res.data]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch();\r\n  }, [page, searchTerm]);\r\n\r\n  //   useEffect(() => {\r\n  //     if (searchTerm === null) return;\r\n  //     setIsLoading(true);\r\n  //     fetch();\r\n  //   }, [searchTerm]);\r\n\r\n  return [images, setImages, errors, isLoading];\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <p className=\"m-auto\">\r\n        <i className=\"fas fa-circle-notch fa-spin text-5xl text-yellow-400 \"></i>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Image from './Image';\r\nimport useFetchImage from '../utils/hooks/useFetchImage';\r\nimport Loading from './Loading';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport useDebounce from '../utils/hooks/useDebounce';\r\n\r\nexport default function Images() {\r\n  const [page, setPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState(null);\r\n  const [images, setImages, errors, isLoading] = useFetchImage(\r\n    page,\r\n    searchTerm\r\n  );\r\n\r\n  // const scrollPosition = useScroll();\r\n\r\n  // const [newImageUrl, setNewImageUrl] = useState('');\r\n\r\n  // const inputRef = useRef(null);\r\n  // const varRef = useRef(images.length);\r\n\r\n  // useEffect(() => {\r\n  //   inputRef.current.focus();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   varRef.current = varRef.current + 1;\r\n  // });\r\n\r\n  // const handleAdd = () => {\r\n  //   if (newImageUrl != '') {\r\n  //     setImages([newImageUrl, ...images]);\r\n  //     setNewImageUrl('');\r\n  //   }\r\n  // };\r\n\r\n  // const handleChange = (event) => {\r\n  //   setNewImageUrl(event.target.value);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   if (scrollPosition >= document.body.offsetHeight - window.innerHeight) {\r\n  //     setPage(page + 1);\r\n  //   }\r\n  // }, [scrollPosition]);\r\n\r\n  const handleRemove = (index) => {\r\n    //setImages(images.filter((image, i) => i != index)); //filtered array\r\n\r\n    setImages([\r\n      ...images.slice(0, index),\r\n      ...images.slice(index + 1, images.length),\r\n    ]);\r\n  };\r\n\r\n  const ShowImage = () => {\r\n    return (\r\n      <InfiniteScroll\r\n        dataLength={images.length}\r\n        next={() => setPage(page + 1)}\r\n        hasMore={true}\r\n        className=\"flex flex-wrap\"\r\n      >\r\n        {images.map((img, index) => (\r\n          <Image\r\n            image={img.urls.regular}\r\n            handleRemove={handleRemove}\r\n            index={index}\r\n            key={index}\r\n          />\r\n        ))}\r\n      </InfiniteScroll>\r\n    );\r\n  };\r\n\r\n  const debounce = useDebounce();\r\n\r\n  const handleInput = (e) => {\r\n    const text = e.target.value;\r\n    debounce(() => setSearchTerm(text));\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"my-5\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleInput}\r\n          className=\"w-full border rounded shadow p-2\"\r\n          placeholder=\"Search Image\"\r\n        />\r\n      </div>\r\n\r\n      {errors.length > 0 && (\r\n        <div className=\"flex h-screen\">\r\n          <p className=\"m-auto\">{errors[0]}</p>\r\n        </div>\r\n      )}\r\n      {/* <p>Component is updated {varRef.current} times</p> */}\r\n      <ShowImage />\r\n      {isLoading && <Loading />}\r\n      {/* {errors.length === 0 && (\r\n        <button onClick={() => setPage(page + 1)}>Load More</button>\r\n      )} */}\r\n      {/* \r\n      <div className=\"flex justify-betwe en my-5\">\r\n        <div className=\"w-full\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"inputBox\"\r\n            ref={inputRef}\r\n            className=\"p-2 border border-gray-800 shadow w-full\"\r\n            value={newImageUrl}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            disabled={newImageUrl == ''}\r\n            className={`p-2 text-white ml-2 ${\r\n              newImageUrl != '' ? ' bg-green-600' : ' bg-green-300'\r\n            }`}\r\n            onClick={handleAdd}\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div> */}\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function useDebounce() {\r\n  const [typingTimeout, setTypingTimeout] = useState('');\r\n\r\n  const debounce = (func, wait = 1000) => {\r\n    clearTimeout(typingTimeout);\r\n    const timeout = setTimeout(() => func(), wait);\r\n    setTypingTimeout(timeout);\r\n  };\r\n\r\n  return debounce;\r\n}\r\n","import React from 'react';\r\nimport Images from '../components/Images';\r\n\r\nexport default function Gallery() {\r\n  return (\r\n    <section className=\"flex justify-center\">\r\n      <div className=\"w-10/12\">\r\n        <div className=\"text-center\">\r\n          <Images />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './assets/css/style.css';\nimport Navbar from './components/Navbar';\nimport Gallery from './page/Gallery';\nimport routes from './utils/routes';\n\nfunction App() {\n  return (\n    // <Router>\n    //   <Navbar />\n    //   <Switch>\n    //     {routes.map((route, index) => (\n    //       <Route\n    //         key={index}\n    //         path={route.path}\n    //         exact={route.exact}\n    //         component={route.component}\n    //       />\n    //     ))}\n    //   </Switch>\n    // </Router>\n    <Gallery />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}